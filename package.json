{
  "name": "matterbridge",
  "version": "1.5.10-dev.6",
  "description": "Matterbridge plugin manager for Matter",
  "author": "https://github.com/Luligu",
  "license": "Apache-2.0",
  "homepage": "https://github.com/Luligu/matterbridge/blob/main/README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Luligu/matterbridge.git"
  },
  "bugs": {
    "url": "https://github.com/Luligu/matterbridge/issues"
  },
  "funding": {
    "type": "buymeacoffee",
    "url": "https://www.buymeacoffee.com/luligugithub"
  },
  "keywords": [
    "matterbridge",
    "homebridge",
    "bridge",
    "plugin",
    "frontend",
    "matterbridge",
    "matter.js",
    "matter-node.js",
    "matter",
    "matterprotocol",
    "iot",
    "smarthome",
    "connectedthings",
    "hap",
    "homekit",
    "siri",
    "google-home",
    "alexa",
    "homeassistant",
    "smartthings",
    "ewelink"
  ],
  "type": "module",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "bin": {
    "matterbridge": "dist/cli.js"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "types": "./dist/index.d.ts"
    },
    "./cluster": {
      "import": "./dist/cluster/export.js",
      "types": "./dist/cluster/export.d.ts"
    },
    "./utils": {
      "import": "./dist/utils/export.js",
      "types": "./dist/utils/export.d.ts"
    },
    "./history": {
      "import": "./dist/history/export.js",
      "types": "./dist/history/export.d.ts"
    },
    "./logger": {
      "import": "./dist/logger/export.js",
      "types": "./dist/logger/export.d.ts"
    },
    "./storage": {
      "import": "./dist/storage/export.js",
      "types": "./dist/storage/export.d.ts"
    }
  },
  "scripts": {
    "build": "tsc",
    "watch": "tsc --watch",
    "start": "node ./dist/cli.js",
    "start:test": "node ./dist/cli.js -test",
    "start:bridge": "node ./dist/cli.js -bridge",
    "start:childbridge": "node ./dist/cli.js -childbridge",
    "start:controller": "node ./dist/cli.js -controller",
    "start:help": "node ./dist/cli.js -help",
    "test": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand --verbose",
    "test:coverage": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand --verbose --coverage",
    "test:verbose": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand --verbose",
    "test:watch": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand --watch",
    "test:matterbridge": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand --verbose --coverage matterbridge.test.ts",
    "test:bridgemode": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand --verbose matterbridge.bridge.test.ts",
    "test:childbridgemode": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand --verbose matterbridge.childbridge.test.ts",
    "test:device": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand --verbose --coverage matterbridgeDevice.test.ts",
    "test:platform": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand --verbose  --coverage matterbridgePlatform.test.ts matterbridgeAccessoryPlatform.test.ts matterbridgeDynamicPlatform.test.ts",
    "test:pluginManager": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand --verbose --coverage pluginManager.test.ts",
    "test:deviceManager": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand --verbose --coverage deviceManager.test.ts",
    "test:utils": "node --experimental-vm-modules node_modules/jest/bin/jest.js --runInBand --verbose utils.test.ts",
    "lint": "eslint --max-warnings=0 .",
    "lint:fix": "eslint --fix --max-warnings=0 .",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,css,md}\"",
    "format:check": "prettier --check \"**/*.{js,jsx,ts,tsx,json,css,md}\"",
    "clean": "npm install --no-save rimraf && rimraf tsconfig.tsbuildinfo ./dist",
    "cleanBuild": "npm run clean && npm run build",
    "deepClean": "npm install --no-save rimraf && rimraf tsconfig.tsbuildinfo package-lock.json npm-shrinkwrap.json ./dist ./node_modules",
    "deepCleanBuild": "npm run deepClean && npm install && npm run build && npm link",
    "prepublishOnly": "npm shrinkwrap",
    "npmPack": "npm run deepCleanBuild && npm shrinkwrap && npm pack && npm run deepCleanBuild",
    "checkDependencies": "npx npm-check-updates",
    "updateDependencies": "npx npm-check-updates -u && npm install && npm run cleanBuild",
    "updateMatter:latest": "npm run deepClean && npm install @project-chip/matter-node.js@latest @project-chip/matter.js@latest && npm install && npm run build",
    "updateMatter:dev": "npm run deepClean && npm install @project-chip/matter-node.js@dev @project-chip/matter.js@dev && npm install && npm run build",
    "updateMatter:loc": "npm run deepClean && npm install ../matter.js/packages/matter-node.js ../matter.js/packages/matter.js && npm install && npm run build",
    "updateHistory:latest": "npm run deepClean && npm install matter-history@latest && npm install && npm run build",
    "updateHistory:dev": "npm run deepClean && npm install matter-history@dev && npm install && npm run build",
    "updateHistory:loc": "npm run deepClean && npm install ../matter-history && npm install && npm run build",
    "wtf:install": "npm install wtfnode && npm install --save-dev @types/wtfnode",
    "wtf:uninstall": "npm uninstall wtfnode @types/wtfnode",
    "preversion": "npm run build && npm run lint",
    "postversion": "git push && git push --tags",
    "version:patch": "npm version patch",
    "version:minor": "npm version minor",
    "version:major": "npm version major",
    "install:dependencies": "npm install @project-chip/matter-node.js express https matter-history node-ansi-logger node-persist-manager ws && npm install --save-dev rimraf",
    "install:typescript": "npm install --save-dev @types/express @types/node @types/ws typescript && npm run build",
    "install:eslint": "npm install --save-dev eslint @eslint/js @types/eslint__js typescript-eslint",
    "install:prettier": "npm install --save-dev prettier eslint-config-prettier eslint-plugin-prettier",
    "install:jest": "npm install --save-dev jest ts-jest @types/jest eslint-plugin-jest"
  },
  "dependencies": {
    "@project-chip/matter-node.js": "0.10.6",
    "@project-chip/matter.js": "0.10.6",
    "archiver": "7.0.1",
    "express": "4.21.0",
    "glob": "11.0.0",
    "https": "1.0.0",
    "matter-history": "1.1.16",
    "node-ansi-logger": "3.0.0",
    "node-persist-manager": "1.0.8",
    "ws": "8.18.0"
  },
  "devDependencies": {
    "@eslint/js": "9.11.1",
    "@types/archiver": "6.0.2",
    "@types/eslint__js": "8.42.3",
    "@types/express": "5.0.0",
    "@types/jest": "29.5.13",
    "@types/node": "22.7.4",
    "@types/ws": "8.5.12",
    "eslint": "9.11.1",
    "eslint-config-prettier": "9.1.0",
    "eslint-plugin-jest": "28.8.3",
    "eslint-plugin-prettier": "5.2.1",
    "jest": "29.7.0",
    "prettier": "3.3.3",
    "rimraf": "^6.0.1",
    "ts-jest": "29.2.5",
    "typescript": "5.6.2",
    "typescript-eslint": "8.7.0"
  }
}