# ─────────────── BUILD STAGE ───────────────
FROM node:22-bookworm-slim AS builder

# 🛠️ Set noninteractive frontend
ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /app
COPY ./package.json ./package-lock.json ./tsconfig.json ./tsconfig.production.json ./
COPY ./src ./src
COPY ./frontend/build ./frontend/build
RUN npm ci && \
    npm run buildProduction && \
    npm pkg delete devDependencies scripts types && \
    npx rimraf ./node_modules && \
    npm install --omit=dev

# ─────────────── RUNTIME STAGE ───────────────
FROM node:22-bookworm-slim AS release

# 🛠️ Set noninteractive frontend
ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /app
COPY --from=builder /app/package.json ./
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/frontend/build ./frontend/build

RUN npm link && \
    apt-get update && \
    apt-get install -y --no-install-recommends curl && \
    apt-get clean && \
    npm install --global --omit=dev matterbridge-zigbee2mqtt \
        matterbridge-somfy-tahoma \
        matterbridge-shelly \
        matterbridge-hass \
        matterbridge-webhooks \
        matterbridge-test \
        matterbridge-example-accessory-platform \
        matterbridge-example-dynamic-platform \
        matterbridge-eve-door \
        matterbridge-eve-motion \
        matterbridge-eve-energy \
        matterbridge-eve-room \
        matterbridge-eve-weather && \
    npm cache clean --force && \
    rm -rf /tmp/* /var/tmp/* /root/.npm /root/.cache /var/lib/apt/lists/* && \
    find /usr/local/lib/node_modules -type d -name ".github" -exec rm -rf {} + && \
    find /usr/local/lib/node_modules -type d -name ".vscode" -exec rm -rf {} + && \
    find /usr/local/lib/node_modules -type f \( -name "*.ts" -o -name "*.js.map" -o -name "*.d.ts" -o -name "*.d.ts.map" -o -name "LICENSE" -o -name "LICENSE.txt" -o -name "*.md" \) -delete && \
    find /usr/local/lib/node_modules/matterbridge/node_modules/@matter -type d -name "src" -exec rm -rf {} + && \
    find /usr/local/lib/node_modules/matterbridge/node_modules/@matter -type d -name "cjs" -exec rm -rf {} + && \
    find ./node_modules -type d -name ".github" -exec rm -rf {} + && \
    find ./node_modules -type d -name ".vscode" -exec rm -rf {} + && \
    find ./node_modules -type f \( -name "*.ts" -o -name "*.js.map" -o -name "*.d.ts" -o -name "*.d.ts.map" -o -name "LICENSE" -o -name "LICENSE.txt" -o -name "*.md" \) -delete && \
    find ./node_modules/@matter -type d -name "src" -exec rm -rf {} + && \
    find ./node_modules/@matter -type d -name "cjs" -exec rm -rf {} +

# Add Docker HEALTHCHECK
HEALTHCHECK --interval=60s --timeout=10s --start-period=60s --retries=5 \
    CMD curl --fail http://localhost:8283/health || exit 1
  
WORKDIR /app
CMD ["matterbridge", "-docker"]
# ─────────────── END ───────────────