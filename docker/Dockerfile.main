FROM node:22-bookworm-slim AS base
WORKDIR /app


FROM base AS builder
WORKDIR /app
COPY ./package.json ./
COPY ./package-lock.json ./
COPY ./tsconfig.json ./
COPY ./tsconfig.production.json ./
COPY ./src ./src
COPY ./frontend/build ./frontend/build
RUN npm ci && npm run build && npm link


FROM base AS release
WORKDIR /app
COPY --from=builder /app/package.json ./
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/frontend/build ./frontend/build
RUN npm link

# Install curl for docker health
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends curl && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install Matterbridge plugins
RUN npm install -g --omit=dev matterbridge-zigbee2mqtt
RUN npm install -g --omit=dev matterbridge-somfy-tahoma
RUN npm install -g --omit=dev matterbridge-shelly
RUN npm install -g --omit=dev matterbridge-hass
RUN npm install -g --omit=dev matterbridge-test
RUN npm install -g --omit=dev matterbridge-example-accessory-platform
RUN npm install -g --omit=dev matterbridge-example-dynamic-platform
RUN npm install -g --omit=dev matterbridge-eve-door
RUN npm install -g --omit=dev matterbridge-eve-motion
RUN npm install -g --omit=dev matterbridge-eve-energy
RUN npm install -g --omit=dev matterbridge-eve-room
RUN npm install -g --omit=dev matterbridge-eve-weather

# Add Docker HEALTHCHECK
HEALTHCHECK --interval=60s --timeout=10s --start-period=60s --retries=5 \
  CMD curl --fail http://localhost:8283/health || exit 1
  
WORKDIR /app
CMD ["matterbridge", "-docker"]
