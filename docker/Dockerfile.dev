# ─────────────── BUILD STAGE ───────────────
FROM node:22-bookworm-slim AS builder

# 🛠️ Set noninteractive frontend
ENV DEBIAN_FRONTEND=noninteractive

# Install git to clone the repositories
RUN apt-get update && \
    apt-get install -y --no-install-recommends git

WORKDIR /app
COPY ./package.json ./package-lock.json ./tsconfig.json ./tsconfig.production.json ./.npmignore ./
COPY ./src ./src
COPY ./frontend/build ./frontend/build
RUN npm ci && npm run build && npm link

WORKDIR /matterbridge-zigbee2mqtt
RUN GIT_SSL_NO_VERIFY=true git clone -b dev https://github.com/Luligu/matterbridge-zigbee2mqtt.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npx rimraf ./node_modules && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-somfy-tahoma
RUN GIT_SSL_NO_VERIFY=true git clone -b dev https://github.com/Luligu/matterbridge-somfy-tahoma.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npx rimraf ./node_modules && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-shelly
RUN GIT_SSL_NO_VERIFY=true git clone -b dev https://github.com/Luligu/matterbridge-shelly.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npx rimraf ./node_modules && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-hass
RUN GIT_SSL_NO_VERIFY=true git clone -b dev https://github.com/Luligu/matterbridge-hass.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npx rimraf ./node_modules && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-webhooks
RUN GIT_SSL_NO_VERIFY=true git clone -b dev https://github.com/Luligu/matterbridge-webhooks.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npx rimraf ./node_modules && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-test
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-test.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npx rimraf ./node_modules && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-example-accessory-platform
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-example-accessory-platform.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npx rimraf ./node_modules && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-example-dynamic-platform
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-example-dynamic-platform.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npx rimraf ./node_modules && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-eve-door
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-eve-door.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npx rimraf ./node_modules && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-eve-motion
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-eve-motion.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npx rimraf ./node_modules && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-eve-energy
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-eve-energy.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npx rimraf ./node_modules && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-eve-room
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-eve-room.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npx rimraf ./node_modules && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-eve-weather
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-eve-weather.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npx rimraf ./node_modules && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /app
RUN npm run cleanBuildProduction && npm pkg delete devDependencies scripts types && npx rimraf ./node_modules && npm install --omit=dev && npm shrinkwrap && npm pack 


# ─────────────── RUNTIME STAGE ───────────────
FROM node:22-bookworm-slim AS release

WORKDIR /app

# 🛠️ Set noninteractive frontend
ENV DEBIAN_FRONTEND=noninteractive

COPY --from=builder \
    /app/*.tgz \
    /matterbridge-zigbee2mqtt/*.tgz \
    /matterbridge-somfy-tahoma/*.tgz \
    /matterbridge-shelly/*.tgz \
    /matterbridge-hass/*.tgz \
    /matterbridge-webhooks/*.tgz \
    /matterbridge-test/*.tgz \
    /matterbridge-example-accessory-platform/*.tgz \
    /matterbridge-example-dynamic-platform/*.tgz \
    /matterbridge-eve-door/*.tgz \
    /matterbridge-eve-motion/*.tgz \
    /matterbridge-eve-energy/*.tgz \
    /matterbridge-eve-room/*.tgz \
    /matterbridge-eve-weather/*.tgz \
    .

RUN apt-get update && \
    apt-get install -y --no-install-recommends curl && \
    apt-get clean && \
    npm install -g --omit=dev *.tgz && \
    npm uninstall -g corepack && \
    npm cache clean --force && \
    rm *.tgz && \
    node -v && \
    npm -v && \
    npm list -g && \
    rm -rf /tmp/* /var/tmp/* /root/.npm /root/.cache /var/lib/apt/lists/* && \
    find /usr/local/lib/node_modules -type d -name ".github" -exec rm -rf {} + && \
    find /usr/local/lib/node_modules -type d -name ".vscode" -exec rm -rf {} + && \
    find /usr/local/lib/node_modules -type f \( -name "*.ts" -o -name "*.js.map" -o -name "*.d.ts" -o -name "*.d.ts.map" -o -name "LICENSE" -o -name "LICENSE.txt" -o -name "*.md" \) -delete && \
    find /usr/local/lib/node_modules/matterbridge/node_modules/@matter -type d -name "src" -exec rm -rf {} + && \
    find /usr/local/lib/node_modules/matterbridge/node_modules/@matter -type d -name "cjs" -exec rm -rf {} + && \
    find /usr/local/lib/node_modules -type d -name "docs" -exec rm -rf {} +

# Add Docker HEALTHCHECK
HEALTHCHECK --interval=60s --timeout=10s --start-period=60s --retries=5 \
    CMD curl --fail http://localhost:8283/health || exit 1

CMD ["matterbridge", "-docker"]
# ─────────────── END ───────────────