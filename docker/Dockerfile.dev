FROM node:22-bookworm-slim AS base

WORKDIR /app
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends git && \
    apt-get clean && \
    node -v && \
    npm -v



FROM base AS builder
WORKDIR /app
COPY ./package.json ./package-lock.json ./tsconfig.json ./tsconfig.production.json ./.npmignore ./
COPY ./src ./src
COPY ./frontend/build ./frontend/build
RUN npm ci && npm run build && npm link

WORKDIR /matterbridge-zigbee2mqtt
RUN GIT_SSL_NO_VERIFY=true git clone -b dev https://github.com/Luligu/matterbridge-zigbee2mqtt.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-somfy-tahoma
RUN GIT_SSL_NO_VERIFY=true git clone -b dev https://github.com/Luligu/matterbridge-somfy-tahoma.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-shelly
RUN GIT_SSL_NO_VERIFY=true git clone -b dev https://github.com/Luligu/matterbridge-shelly.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-hass
RUN GIT_SSL_NO_VERIFY=true git clone -b dev https://github.com/Luligu/matterbridge-hass.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-webhooks
RUN GIT_SSL_NO_VERIFY=true git clone -b dev https://github.com/Luligu/matterbridge-webhooks.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-test
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-test.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-example-accessory-platform
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-example-accessory-platform.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-example-dynamic-platform
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-example-dynamic-platform.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-eve-door
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-eve-door.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-eve-motion
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-eve-motion.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-eve-energy
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-eve-energy.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-eve-room
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-eve-room.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /matterbridge-eve-weather
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/Luligu/matterbridge-eve-weather.git .
RUN npm ci && npm link matterbridge && npm run buildProduction && npm pkg delete devDependencies scripts types && npm install --omit=dev && npm shrinkwrap && npm pack

WORKDIR /app
RUN npm run cleanBuildProduction && npm pkg delete devDependencies scripts types && npm install --omit=dev && npm shrinkwrap && npm pack 


FROM node:22-bookworm-slim AS release
WORKDIR /app

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends curl && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*
    
COPY --from=builder /app/*.tgz .
RUN npm install -g npm@latest && npm install -g --omit=dev *.tgz && rm *.tgz

COPY --from=builder /matterbridge-zigbee2mqtt/*.tgz .
COPY --from=builder /matterbridge-somfy-tahoma/*.tgz .
COPY --from=builder /matterbridge-shelly/*.tgz .
COPY --from=builder /matterbridge-hass/*.tgz .
COPY --from=builder /matterbridge-webhooks/*.tgz .
COPY --from=builder /matterbridge-test/*.tgz .
COPY --from=builder /matterbridge-example-accessory-platform/*.tgz .
COPY --from=builder /matterbridge-example-dynamic-platform/*.tgz .
COPY --from=builder /matterbridge-eve-door/*.tgz .
COPY --from=builder /matterbridge-eve-motion/*.tgz .
COPY --from=builder /matterbridge-eve-energy/*.tgz .
COPY --from=builder /matterbridge-eve-room/*.tgz .
COPY --from=builder /matterbridge-eve-weather/*.tgz .
RUN npm install -g --omit=dev *.tgz && rm *.tgz && node -v && npm -v && npm list -g && npm cache clean --force && rm -rf /tmp/* /var/tmp/* /root/.npm /root/.cache && apt-get clean && rm -rf /var/lib/apt/lists/*

# Add Docker HEALTHCHECK
HEALTHCHECK --interval=60s --timeout=10s --start-period=60s --retries=5 \
  CMD curl --fail http://localhost:8283/health || exit 1

CMD ["matterbridge", "-docker"]
